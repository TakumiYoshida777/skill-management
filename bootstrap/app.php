<?php

/*
|--------------------------------------------------------------------------
| アプリケーションの作成
|--------------------------------------------------------------------------
|
| 最初に行うことは、Laravelアプリケーションの新しいインスタンスを作成することです。
| これはLaravelのすべてのコンポーネントを結びつける「接着剤」として機能し、
| システムの各部分をバインドするIoCコンテナでもあります。
|
*/

$app = new Illuminate\Foundation\Application(
    $_ENV['APP_BASE_PATH'] ?? dirname(__DIR__)
);

/*
|--------------------------------------------------------------------------
| 重要なインターフェースのバインド
|--------------------------------------------------------------------------
|
| 次に、いくつかの重要なインターフェースをコンテナにバインドして、
| 必要に応じてそれらを解決できるようにします。カーネルは、このアプリケーションに対する
| ウェブとCLIの両方からの受信リクエストを処理します。
|
*/

$app->singleton(
    Illuminate\Contracts\Http\Kernel::class,
    App\Http\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Console\Kernel::class,
    App\Console\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Debug\ExceptionHandler::class,
    App\Exceptions\Handler::class
);

/*
|--------------------------------------------------------------------------
| アプリケーションの返却
|--------------------------------------------------------------------------
|
| このスクリプトはアプリケーションのインスタンスを返します。インスタンスは、
| 実際のアプリケーションの実行とレスポンスの送信を分離するために、
| 呼び出しスクリプトに渡されます。
|
*/

return $app;
